<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd         
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd         
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd         
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd         
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd  
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	">

	<context:property-placeholder location="classpath*:META-INF/spring/*.properties" />

	<jpa:repositories base-package="permnotifier.repositories" />
	<context:component-scan base-package="permnotifier">
		<context:exclude-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<bean class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" id="dataSource">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="validationQuery" value="SELECT 1" />
	</bean>
	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<property name="persistenceUnitName" value="persistenceUnit" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean class="org.springframework.mail.javamail.JavaMailSenderImpl"
		id="mailSender">
		<property name="host" value="${email.host}" />
	</bean>

	<task:executor id="asyncExecutor" pool-size="${executor.poolSize}" />
	<bean class="org.apache.solr.client.solrj.impl.HttpSolrServer" id="solrServer">
		<constructor-arg value="${solr.serverUrl}" />
	</bean>

	<!-- batch jobs -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager">
			<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
				<property name="dataSource" ref="dataSource" />
			</bean>
		</property>
	</bean>
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<batch:job id="dolJob">
		<batch:step id="fetchData">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="reader" processor="processor"
					writer="permWriter" commit-interval="20" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<batch:job id="initialDataJob">
		<batch:step id="loadPermData" next="loadLCAData">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="permResourceReader"
					writer="permWriter" commit-interval="200" />
					<batch:no-rollback-exception-classes>
						<batch:include class="org.springframework.orm.jpa.JpaSystemException"/>
						<batch:include class="org.hibernate.exception.ConstraintViolationException"/>
					</batch:no-rollback-exception-classes>
			</batch:tasklet>
		</batch:step>
		<batch:step id="loadLCAData">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="lcaResourceReader"
					writer="lcaWriter" commit-interval="200" />
					<batch:no-rollback-exception-classes>
						<batch:include class="org.springframework.orm.jpa.JpaSystemException"/>
						<batch:include class="org.hibernate.exception.ConstraintViolationException"/>
					</batch:no-rollback-exception-classes>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- perm record initialization beans-->
	<bean id="permRecord" class="permnotifier.domain.PermRecord" scope="prototype" />
	<bean id="permResourceReader"
		class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="classpath:initialdata/PERM*.csv" />
		<property name="delegate" ref="permFlatFileReader" />
	</bean>
	<bean id="permFlatFileReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="caseNumber,jobPostingDate,status,employer,occupationTitle,occupationLevel,offerLow,offerHigh,offerSalaryType,city,state,countryOfOrigin" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="permRecord" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="permRecordSavingStrategy" class="permnotifier.batch.strategy.impl.PermRecordSavingStrategy" />
	<bean id="permWriter" class="permnotifier.batch.DolItemWriter">
		<property name="recordSavingStrategy" ref="permRecordSavingStrategy" />
	</bean>
	
	<!-- lca record initialization beans-->
	<bean id="lcaRecord" class="permnotifier.domain.LCARecord" scope="prototype" />
	<bean id="lcaResourceReader"
		class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="classpath:initialdata/LCA*.csv" />
		<property name="delegate" ref="lcaFlatFileReader" />
	</bean>
	<bean id="lcaFlatFileReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="caseNumber,status,caseSubmission,caseDecision,employmentStart,employer,employerCity,employerState,jobTitle,offerLow,offerHigh,offerSalaryType,workLocationCity,workLocationState" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="permnotifier.batch.LCAFieldSetMapper">
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="lcaRecordSavingStrategy" class="permnotifier.batch.strategy.impl.LCARecordSavingStrategy" />
	<bean id="lcaWriter" class="permnotifier.batch.DolItemWriter">
		<property name="recordSavingStrategy" ref="lcaRecordSavingStrategy" />
	</bean>
	
	<!-- batch beans -->
	<bean id="processor" class="permnotifier.batch.DolItemProcessor"></bean>
	<bean id="reader" class="permnotifier.batch.DolItemReader" scope="step">
		<property name="pageSize" value="20" />
	</bean>

</beans>
